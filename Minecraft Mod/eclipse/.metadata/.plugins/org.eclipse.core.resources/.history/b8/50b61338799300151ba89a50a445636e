package com.ThreeFoolsStudios.SpectralMod.Gui;

import java.io.IOException;

import net.minecraft.client.gui.GuiButton;
import net.minecraft.client.gui.GuiScreen;
import net.minecraft.util.ChatComponentTranslation;
import net.minecraft.util.ResourceLocation;

import com.ThreeFoolsStudios.SpectralMod.Reference;
import com.ThreeFoolsStudios.SpectralMod.Gui.Buttons.MasterButton;
import com.ThreeFoolsStudios.SpectralMod.Gui.Buttons.MasterButton2;
import com.ThreeFoolsStudios.SpectralMod.Gui.Buttons.MasterButton3;
import com.ThreeFoolsStudios.SpectralMod.Gui.Buttons.SpellButton2;
import com.ThreeFoolsStudios.SpectralMod.Gui.Buttons.SpellButton3;
import com.ThreeFoolsStudios.SpectralMod.Gui.Buttons.SpellButtons;
import com.ThreeFoolsStudios.SpectralMod.SpectralPlayer.ExtendedSpectralPlayer;

public class GuiSpectralAltar extends GuiScreen {
	private GuiButton a;
	private GuiButton e;
	private GuiButton n;
	
	private GuiButton Master_1;
	private GuiButton Master_2;
	private GuiButton Master_3;
	
	private GuiButton Spell_1;
	private GuiButton Spell_2;
	private GuiButton Spell_3;
	
	private GuiButton Spell_1_Upgrade_2;
	private GuiButton Spell_1_Upgrade_3;
	
	private GuiButton Spell_2_Upgrade_2;
	private GuiButton Spell_2_Upgrade_3;
	
	private GuiButton Spell_3_Upgrade_2;
	private GuiButton Spell_3_Upgrade_3;
	
	
	private static final ResourceLocation LockedSpells = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/LockedSpells.png");
	private static final ResourceLocation texturepath = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/ClassSelection.png");
	
	private static final ResourceLocation texturepath2 = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/AltarBackground.png");
	private static final ResourceLocation texturepath3 = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/ArcaneSpellBackground.png");
	
	private static final ResourceLocation texturepath4 = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/ElementalSpellBackground.png");
	private static final ResourceLocation texturepath5 = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/NecromanticSpellBackground.png");
	
	private static final ResourceLocation texturepath6 = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/Elemental_Spell_Images.png");
	private static final ResourceLocation texturepath7 = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/MasterSpells.png");
	private static final ResourceLocation texturepath8 = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/Arcane_Spell_Images.png");
	private static final ResourceLocation texturepath9 = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/Necromantic_Spell_Images.png");
	private static final ResourceLocation texturepath10 = new ResourceLocation(Reference.MOD_ID + ":textures/Gui/ActiveSpells.png");

	@Override
	public void drawScreen(int mouseX, int mouseY, float partialTicks) {
		ExtendedSpectralPlayer SpectralPlayer = ExtendedSpectralPlayer.get(mc.thePlayer);
		int xPos = SpectralPlayer.GetXScreenSize();
		int yPos = SpectralPlayer.GetYScreenSize();
		this.drawDefaultBackground();
		if (SpectralPlayer.GetActiveClass() == 0) {			
			this.mc.getTextureManager().bindTexture(texturepath);
			this.drawTexturedModalRect((this.width - 201) /2 , (this.height - 175) /2 , 0, 0, 200, 175);		
		} 
		else {			
			this.mc.getTextureManager().bindTexture(texturepath2);
			this.drawTexturedModalRect((this.width - 223) /2 , (this.height - 175) /2, 0, 0, 223, 175);			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath3);
				this.drawTexturedModalRect((this.width - 160) /2, (this.height - 120) /2, 0, 0, 180, 130); //background
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath4);
				this.drawTexturedModalRect((this.width - 160) /2, (this.height - 120) /2, 0, 0, 180, 130); //background
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath5);
				this.drawTexturedModalRect((this.width - 160) /2, (this.height - 120) /2, 0, 0, 180, 130); //background
				break;				
			}				
			if (SpectralPlayer.GetNumberOfSpells() == 0) {					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *9 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 16, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1					
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);					
				}		
				else if (SpectralPlayer.GetNumberOfSpells() == 1 && SpectralPlayer.GetSpectralLevel() == 2) {					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3					
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2,  16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1					
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						if (SpectralPlayer.GetSpell1Level() == 1){
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true); } 
						else if (SpectralPlayer.GetSpell2Level() == 1){
						this.fontRendererObj.drawString("Burst", xPos / 4 + 112,yPos / 2 - 73, -1, true); }
						else {
						this.fontRendererObj.drawString("Poison", xPos / 4 + 52,yPos / 2 - 73, -1, true); }
						break;						
					case 2:
						if (SpectralPlayer.GetSpell1Level() == 1){
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true); } 
						else if (SpectralPlayer.GetSpell2Level() == 1){
						this.fontRendererObj.drawString("Frost", xPos / 4 + 112,yPos / 2 - 73, -1, true); }
						else {
						this.fontRendererObj.drawString("Storm", xPos / 4 + 162,yPos / 2 - 73, -1, true); }
						break;						
					case 3:
						if (SpectralPlayer.GetSpell1Level() == 1){
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true); } 
						else if (SpectralPlayer.GetSpell2Level() == 1){
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 112,yPos / 2 - 73, -1, true); }
						else {
						this.fontRendererObj.drawString("Warp", xPos / 4 + 162,yPos / 2 - 73, -1, true); }
						break;						
					}
					
				} else if (SpectralPlayer.GetNumberOfSpells() == 1 && SpectralPlayer.GetSpectralLevel() == 3) {
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}

					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3					
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1	
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 112,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 162,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 112,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 162,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 112,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Warp", xPos / 4 + 162,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetNumberOfSpells() == 2
						&& SpectralPlayer.GetSpell1Level() == 1
						&& SpectralPlayer.GetSpell2Level() == 1
						&& SpectralPlayer.GetSpectralLevel() == 3) {
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetNumberOfSpells() == 2
						&& SpectralPlayer.GetSpell1Level() == 1
						&& SpectralPlayer.GetSpell3Level() == 1
						&& SpectralPlayer.GetSpectralLevel() == 3) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3			
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1					
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 162,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 162,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Warp", xPos / 4 + 162,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetNumberOfSpells() == 2
						&& SpectralPlayer.GetSpell2Level() == 1
						&& SpectralPlayer.GetSpell3Level() == 1
						&& SpectralPlayer.GetSpectralLevel() == 3) {
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 162,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 162,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Warp", xPos / 4 + 162,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 4
						&& SpectralPlayer.GetSpell1Level() == 1
						&& SpectralPlayer.GetSpell2Level() == 1
						&& SpectralPlayer.GetSpell3Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3									
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Warp", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 4
						&& SpectralPlayer.GetSpell1Level() == 2
						&& SpectralPlayer.GetSpell2Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3			
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1					
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 4
						&& SpectralPlayer.GetSpell1Level() == 2
						&& SpectralPlayer.GetSpell3Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3			
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Warp", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 4
						&& SpectralPlayer.GetSpell2Level() == 2
						&& SpectralPlayer.GetSpell3Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3			
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Warp", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 4
						&& SpectralPlayer.GetSpell2Level() == 2
						&& SpectralPlayer.GetSpell1Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3					
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1						
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 4
						&& SpectralPlayer.GetSpell3Level() == 2
						&& SpectralPlayer.GetSpell1Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3					
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1					
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Warp", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 4
						&& SpectralPlayer.GetSpell3Level() == 2
						&& SpectralPlayer.GetSpell2Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1					
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Warp", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetNumberOfSpells() == 1){
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1					
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Warp", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell1Level() == 2
						&& SpectralPlayer.GetSpell2Level() == 1
						&& SpectralPlayer.GetSpell3Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell1Level() == 1
						&& SpectralPlayer.GetSpell2Level() == 2
						&& SpectralPlayer.GetSpell3Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3					
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell1Level() == 1
						&& SpectralPlayer.GetSpell2Level() == 1
						&& SpectralPlayer.GetSpell3Level() == 2) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell1Level() == 3
						&& SpectralPlayer.GetSpell3Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell1Level() == 3
						&& SpectralPlayer.GetSpell2Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					}
					
				}  else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell2Level() == 3
						&& SpectralPlayer.GetSpell1Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;					
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1					
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell2Level() == 3
						&& SpectralPlayer.GetSpell3Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3	
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell3Level() == 3
						&& SpectralPlayer.GetSpell1Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3					
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell3Level() == 3
						&& SpectralPlayer.GetSpell2Level() == 1) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1			
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 20) /2, 0, 32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 20) /2, 16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width + 80) /2, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell1Level() == 2
						&& SpectralPlayer.GetSpell2Level() == 2) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1				
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 20) /2, 32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect((this.width - 115) /2, (this.height + 95) /2, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect((this.width + 8) /2, (this.height + 95) /2, 16, 0, 16, 16);
					this.drawTexturedModalRect((this.width + 123) /2, (this.height + 95) /2, 32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect((this.width - 160) /2, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect((this.width - 40) /2, yPos / 2 - 80, 0,0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell1Level() == 2
						&& SpectralPlayer.GetSpell3Level() == 2) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 100) /2, 0,0, 16, 16);// spell icons *8 //spell 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 100) /2, 0, 0, 16, 16); // spell 2
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 100) /2, 32, 0, 16, 16); // spell 3				
					this.drawTexturedModalRect((this.width - 115) /2, (this.height - 40) /2, 0, 16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect((this.width + 8) /2, (this.height - 40) /2, 16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect((this.width + 123) /2, (this.height - 40) /2, 32, 16, 16, 16); // spell 3 upgrade 1						
					this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
					this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 5
						&& SpectralPlayer.GetSpell2Level() == 2
						&& SpectralPlayer.GetSpell3Level() == 2) {
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
					this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
					this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3					
					this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
					this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1					
					this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
					this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
						break;						
					}
					
				} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3
						&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
					
					switch (SpectralPlayer.GetActiveClass()){					
					case 1:
						this.mc.getTextureManager().bindTexture(texturepath8);
						break;						
					case 2:
						this.mc.getTextureManager().bindTexture(texturepath6);
						break;						
					case 3:
						this.mc.getTextureManager().bindTexture(texturepath9);
						break;						
					}
					this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
					this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
					this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3					
					this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
					this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1					
					this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
					this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
					this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
					
					this.mc.getTextureManager().bindTexture(texturepath7);
					this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
					this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
					this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
					
					this.mc.getTextureManager().bindTexture(texturepath10);
					this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
					this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
					switch (SpectralPlayer.GetActiveClass()){				
					case 1:
						this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 2:
						this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					case 3:
						this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
						this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
						break;						
					}
					
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.mc.getTextureManager().bindTexture(texturepath8);
					break;					
				case 2:
					this.mc.getTextureManager().bindTexture(texturepath6);
					break;					
				case 3:
					this.mc.getTextureManager().bindTexture(texturepath9);
					break;					
				}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell2Level() == 3
				&& SpectralPlayer.GetSpell1Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;			
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell2Level() == 3
				&& SpectralPlayer.GetSpell3Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell3Level() == 3
				&& SpectralPlayer.GetSpell1Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){		
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell3Level() == 3
				&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){		
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3
				&& SpectralPlayer.GetSpell2Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3
				&& SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}

			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell2Level() == 3
				&& SpectralPlayer.GetSpell1Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell2Level() == 3
				&& SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){		
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell3Level() == 3
				&& SpectralPlayer.GetSpell1Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}

			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell3Level() == 3
				&& SpectralPlayer.GetSpell2Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3
				&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 1){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 1
				&& SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 1
				&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 2
				&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 1){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 2
				&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){		
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 1
				&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
			&& SpectralPlayer.GetSpell2Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
				&& SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell2Level() == 3
				&& SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 2
				&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
				&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
				&& SpectralPlayer.GetSpell3Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell2Level() == 3
				&& SpectralPlayer.GetSpell1Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell2Level() == 3
				&& SpectralPlayer.GetSpell3Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell3Level() == 3
				&& SpectralPlayer.GetSpell1Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell3Level() == 3
				&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){		
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
				&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 1
				&& SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 1
				&& SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1
				&& SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1			
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 1
				&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3
				&& SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath7);
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
				&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 1){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
				&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){		
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 2
				&& SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 1
				&& SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 1
				&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3				
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 2
				&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
				this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1				
				this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
				this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
				
				this.mc.getTextureManager().bindTexture(texturepath10);
				this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
				this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
				switch (SpectralPlayer.GetActiveClass()){				
				case 1:
					this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 2:
					this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				case 3:
					this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
					this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
					break;						
				}
				
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 1 &&
				SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 2 &&
				SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;			
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 2 &&
				SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 1 &&
				SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 2 &&
				SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 1 &&
				SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2 &&
				SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 2 &&
				SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1 &&
				SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 1 &&
				SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3 &&
				SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 2 &&
				SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3 &&
				SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){		
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2){
			
			switch (SpectralPlayer.GetActiveClass()){		
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){
			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;
				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;
				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;
				
			}

			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
			this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
			this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
			
		} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 2 &&
				SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 3){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1 &&
				SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3 &&
				SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 1 &&
				SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 3 &&
				SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 9 && ((SpectralPlayer.GetSpell1Level() == 3 &&
				SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 2) ||
				(SpectralPlayer.GetSpell1Level() == 2 && SpectralPlayer.GetSpell2Level() == 3 
				&& SpectralPlayer.GetSpell3Level() == 2) || (SpectralPlayer.GetSpell1Level() == 2 &&
				SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3))){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 10 && SpectralPlayer.GetMasterSpell() == 0){
			
			switch (SpectralPlayer.GetActiveClass()){		
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		} else if (SpectralPlayer.GetSpectralLevel() == 10 && SpectralPlayer.GetMasterSpell() != 0){
			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			}
			
		}
		else {			
			switch (SpectralPlayer.GetActiveClass()){			
			case 1:
				this.mc.getTextureManager().bindTexture(texturepath8);
				break;				
			case 2:
				this.mc.getTextureManager().bindTexture(texturepath6);
				break;				
			case 3:
				this.mc.getTextureManager().bindTexture(texturepath9);
				break;				
			}
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 50, 0,0, 16, 16);// spell icons *9 //spell 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 50,16, 0, 16, 16); // spell 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 50,32, 0, 16, 16); // spell 3			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 - 20, 0,16, 16, 16); // spell 1 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 - 20,16, 16, 16, 16); // spell 2 upgrade 1
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 - 20,32, 16, 16, 16); // spell 3 upgrade 1			
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 10, 0,32, 16, 16); // spell 1 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 10,16, 32, 16, 16); // spell 2 upgrade 2
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 10,32, 32, 16, 16); // spell 3 upgrade 2
			
			this.mc.getTextureManager().bindTexture(texturepath7);
			this.drawTexturedModalRect(xPos / 4 + 50, yPos / 2 + 47, 0,0, 16, 16);// Master Spells
			this.drawTexturedModalRect(xPos / 4 + 110, yPos / 2 + 47,16, 0, 16, 16);
			this.drawTexturedModalRect(xPos / 4 + 170, yPos / 2 + 47,32, 0, 16, 16);
			
			this.mc.getTextureManager().bindTexture(texturepath10);
			this.drawTexturedModalRect(xPos / 4 + 30, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 90, yPos / 2 - 80, 0,0, 60, 20);
			this.drawTexturedModalRect(xPos / 4 + 150, yPos / 2 - 80,0, 0, 60, 20);
			switch (SpectralPlayer.GetActiveClass()){				
			case 1:
				this.fontRendererObj.drawString("Dig", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Burst", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Poison", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 2:
				this.fontRendererObj.drawString("Fire", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Frost", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;						
			case 3:
				this.fontRendererObj.drawString("Summon", xPos / 4 + 52,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Shadow", xPos / 4 + 107,yPos / 2 - 73, -1, true);
				this.fontRendererObj.drawString("Storm", xPos / 4 + 164,yPos / 2 - 73, -1, true);
				break;
			}
			}
				
		}
		super.drawScreen(mouseX, mouseY, partialTicks);
	}

	@Override
	public boolean doesGuiPauseGame() {
		return false;
	}

	@Override
	public void initGui() {
		ExtendedSpectralPlayer SpectralPlayer = ExtendedSpectralPlayer.get(mc.thePlayer);
		int xPos = SpectralPlayer.GetXScreenSize();
		int yPos = SpectralPlayer.GetYScreenSize();
		
		if (SpectralPlayer.GetActiveClass() == 0) {
			this.buttonList.add(this.a = new GuiButton(0, xPos / 2 - 30,yPos / 2 - 55, 60, 20, "Arcane"));
			this.buttonList.add(this.e = new GuiButton(1, xPos / 2 - 80,yPos / 2 + 20, 60, 20, "Elemental"));
			this.buttonList.add(this.n = new GuiButton(2, xPos / 2 + 10,yPos / 2 + 20, 65, 20, "Necromantic"));
			
		}
		else {
			
			if (SpectralPlayer.GetSpectralLevel() == 1 && SpectralPlayer.GetSpell1Level() == 0 
					&& SpectralPlayer.GetSpell2Level() == 0 && SpectralPlayer.GetSpell3Level() == 0) {
	
				switch (SpectralPlayer.GetActiveClass()){
					
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}
				
				
			} else if (SpectralPlayer.GetSpectralLevel() == 1) {
				
			} else if (SpectralPlayer.GetNumberOfSpells() == 1 && SpectralPlayer.GetSpell1Level() == 1 
					&& SpectralPlayer.GetSpectralLevel() == 2) {
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetNumberOfSpells() == 1 && SpectralPlayer.GetSpell2Level() == 1 
					&& SpectralPlayer.GetSpectralLevel() == 2) {
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetNumberOfSpells() == 1 && SpectralPlayer.GetSpell3Level() == 1
					&& SpectralPlayer.GetSpectralLevel() == 2) {
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetNumberOfSpells() == 1 && SpectralPlayer.GetSpell1Level() == 2 
					&& SpectralPlayer.GetSpectralLevel() == 3) {
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetNumberOfSpells() == 1 && SpectralPlayer.GetSpell2Level() == 2 
					&& SpectralPlayer.GetSpectralLevel() == 3 ) {
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetNumberOfSpells() == 1 && SpectralPlayer.GetSpell3Level() == 2 
					&& SpectralPlayer.GetSpectralLevel() == 3 ) {
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetNumberOfSpells() == 2 && SpectralPlayer.GetSpell1Level() == 1 
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpectralLevel() == 3) {
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetNumberOfSpells() == 2 && SpectralPlayer.GetSpell1Level() == 1 
					&& SpectralPlayer.GetSpell3Level() == 1 && SpectralPlayer.GetSpectralLevel() == 3) {
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetNumberOfSpells() == 2 && SpectralPlayer.GetSpell2Level() == 1 
					&& SpectralPlayer.GetSpell3Level() == 1 && SpectralPlayer.GetSpectralLevel() == 3) {
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
				}
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell1Level() == 1 
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 1){
							
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell1Level() == 2 
					&& SpectralPlayer.GetSpell2Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell1Level() == 2 
					&& SpectralPlayer.GetSpell3Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell2Level() == 2 
					&& SpectralPlayer.GetSpell3Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell2Level() == 2 
					&& SpectralPlayer.GetSpell1Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell3Level() == 2 
					&& SpectralPlayer.GetSpell1Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell3Level() == 2 
					&& SpectralPlayer.GetSpell2Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell1Level() == 3){
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
				}
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell2Level() == 3){
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}
				
			} else if (SpectralPlayer.GetSpectralLevel() == 4 && SpectralPlayer.GetSpell3Level() == 3){
				
				switch (SpectralPlayer.GetActiveClass()){

				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell1Level() == 2
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 1){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell1Level() == 1
						&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 1){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell1Level() == 1
						&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 2){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));						
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));	
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell2Level() == 3
					&& SpectralPlayer.GetSpell1Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));	
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell2Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}

				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));	
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell3Level() == 3
					&& SpectralPlayer.GetSpell1Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));	
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell3Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 1){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));	
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell1Level() == 2
					&& SpectralPlayer.GetSpell2Level() == 2){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell1Level() == 2
					&& SpectralPlayer.GetSpell3Level() == 2){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 5 && SpectralPlayer.GetSpell2Level() == 2
					&& SpectralPlayer.GetSpell3Level() == 2){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3 
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell2Level() == 3
					&& SpectralPlayer.GetSpell1Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell2Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}

				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell3Level() == 3
					&& SpectralPlayer.GetSpell1Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell3Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 2){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 2){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell2Level() == 3
					&& SpectralPlayer.GetSpell1Level() == 2){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell2Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 2){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}

				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell3Level() == 3
					&& SpectralPlayer.GetSpell1Level() == 2){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell3Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 2){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 1){
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 1
					&& SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 1
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 2
					&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 1){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 2
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 2){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 6 && SpectralPlayer.GetSpell1Level() == 1
					&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 2){
				
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 3){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 3){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell2Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 3){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}

				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 2
					&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 2){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));	
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));					
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}

				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell2Level() == 3
					&& SpectralPlayer.GetSpell1Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Poison"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Storm"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_3 = new GuiButton(0,xPos / 4 + 150, yPos / 2 - 80, 60, 20, "Warp"));
					break;
					
				}

				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell2Level() == 3
					&& SpectralPlayer.GetSpell3Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell3Level() == 3
					&& SpectralPlayer.GetSpell1Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Burst"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Frost"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_2 = new GuiButton(0,xPos / 4 + 90, yPos / 2 - 80, 60, 20, "Shadow"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell3Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetMasterSpell() != 0){
				
				switch (SpectralPlayer.GetActiveClass()){
				
				case 1:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Dig"));
					break;
					
				case 2:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Fire"));
					break;
					
				case 3:
					this.buttonList.add(this.Spell_1 = new GuiButton(0,xPos / 4 + 30, yPos / 2 - 80, 60, 20, "Summon"));
					break;
					
				}
				
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3 
					&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 1){
				
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 2){
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 2
					&& SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1){
				
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 1
					&& SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 1
					&& SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 2
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3){
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 3
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 1
					&& SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 1
					&& SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1
					&& SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 7 && SpectralPlayer.GetSpell1Level() == 1
					&& SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3
					&& SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1){
				
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3){
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 1 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 3){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 2){
				
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 2 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 2 &&
					SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 1 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 2 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 1 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 2 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 1 &&
					SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 8 && SpectralPlayer.GetSpell1Level() == 2 &&
					SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2){
				
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3){
				
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 2 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 3){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 1 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_3_Upgrade_2 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 1 && SpectralPlayer.GetSpell3Level() == 3 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_2_Upgrade_2 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 1 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 3 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_2 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 - 20, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 2 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));	
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 2 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 9 && SpectralPlayer.GetSpell1Level() == 2 &&
					SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 10 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 3){
				
				this.buttonList.add(this.Master_1 = new MasterButton(0, xPos / 4 + 50, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_2 = new MasterButton2(0, xPos / 4 + 110, yPos / 2 + 47, 16, 16, ""));
				this.buttonList.add(this.Master_3 = new MasterButton3(0, xPos / 4 + 170, yPos / 2 + 47, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 10 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 2 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_3_Upgrade_3 = new SpellButton3(0, xPos / 4 + 170, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 10 && SpectralPlayer.GetSpell1Level() == 3 &&
					SpectralPlayer.GetSpell2Level() == 2 && SpectralPlayer.GetSpell3Level() == 3 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_2_Upgrade_3 = new SpellButton2(0, xPos / 4 + 110, yPos / 2 + 10, 16, 16, ""));
				
			} else if (SpectralPlayer.GetSpectralLevel() == 10 && SpectralPlayer.GetSpell1Level() == 2 &&
					SpectralPlayer.GetSpell2Level() == 3 && SpectralPlayer.GetSpell3Level() == 3 &&
					SpectralPlayer.GetMasterSpell() != 0){
				
				this.buttonList.add(this.Spell_1_Upgrade_3 = new SpellButtons(0, xPos / 4 + 50, yPos / 2 + 10, 16, 16, ""));
				
			}
			
		} 
	}

	@Override
	protected void actionPerformed(GuiButton button) throws IOException {
		ExtendedSpectralPlayer SpectralPlayer = ExtendedSpectralPlayer
				.get(mc.thePlayer);
		if (button == this.a) { // arcane class set
			this.mc.displayGuiScreen(null);
			SpectralPlayer.UpdatePlayerClass(1);
			this.initGui();			
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.e) { // elemental class set
			this.mc.displayGuiScreen(null);
			SpectralPlayer.UpdatePlayerClass(2);
			this.initGui();			
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.n) { // necromantic class set
			this.mc.displayGuiScreen(null);
			SpectralPlayer.UpdatePlayerClass(3);
			this.initGui();			
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		}
		//
		else if (button == this.Spell_1) { 
			this.mc.displayGuiScreen(null);
			if (SpectralPlayer.GetNumberOfSpells() == 0){
				SpectralPlayer.SetActiveSpell(1);
			}
			SpectralPlayer.SetNumberOfSpells(1);
			SpectralPlayer.SetSpell1Level(1);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Spell_2) { 
			this.mc.displayGuiScreen(null);
			if (SpectralPlayer.GetNumberOfSpells() == 0){
				SpectralPlayer.SetActiveSpell(2);
			}
			SpectralPlayer.SetNumberOfSpells(1);
			SpectralPlayer.SetSpell2Level(1);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Spell_3) { 
			if (SpectralPlayer.GetNumberOfSpells() == 0){
				SpectralPlayer.SetActiveSpell(3);
			}
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetNumberOfSpells(1);
			SpectralPlayer.SetSpell3Level(1);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Spell_1_Upgrade_2) {
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetSpell1Level(2);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Spell_2_Upgrade_2) {
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetSpell2Level(2);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Spell_3_Upgrade_2) {
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetSpell3Level(2);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Spell_1_Upgrade_3) {
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetSpell1Level(3);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Spell_2_Upgrade_3) {
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetSpell2Level(3);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Spell_3_Upgrade_3) {
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetSpell3Level(3);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Master_1) {
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetNumberOfSpells(1);
			SpectralPlayer.setMasterSpell(1);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Master_2) {
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetNumberOfSpells(1);
			SpectralPlayer.setMasterSpell(2);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} else if (button == this.Master_3) {
			this.mc.displayGuiScreen(null);
			SpectralPlayer.SetNumberOfSpells(1);
			SpectralPlayer.setMasterSpell(3);
			if (this.mc.currentScreen == null)
				this.mc.setIngameFocus();
		} 
	}
}
